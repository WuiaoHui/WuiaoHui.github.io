let和const命令

1.let命令
let命令用于声明变量。作用类似于var,但是所声明的变量只在let命令所在的代码块内有效。
let的特点：
（1）不存在变量提升，即变量一定要在声明之后才能使用。
（2）暂时性死区：在一个块级作用域内，let命令声明了一个变量，则它就绑定了这个变量。在这个作用域内，这个变量在声明之前是不存在的，也就是这个变量的暂时性死区。
（3）不允许重复声明：let不允许在相同作用域内重复声明同一个变量

2.ES6的块级作用域与函数声明
ES6引入块级作用域，明确表示允许在块级作用域中声明函数。ES6规定，在块级作用域中，函数声明语句的行为类似于let，在块级作用域之外不可引用。但是在浏览器中运行时却不一样。为了减轻不兼容问题，ES6规定，浏览器的实现可以不遵守上面的问题，而有自己的行为方式：
（1）允许在块级作用域内声明函数。
（2）函数声明类似var，即会提升到全局作用域或函数作用域的头部。
（3）同时，函数声明还会提升到所在的块级作用域的头部。
ES6的块级作用域允许声明函数的规则只在使用大括号的情况下成立，如果没有使用大括号，就会报错。

3.const命令
const声明一个只读的常数。一旦声明，常量的值就不能改变，一旦声明就必须初始化。
（1）不存在变量提升
（2）暂时性死区
（3）不允许重复声明
const实际上保证的并不是变量的值不得改动，而是变量指向的那个内存地址不得改动。
所以对于复合类型的数据而言，变量指向的内存地址保存的只是一个指针，const只能保证这个指针是固定的，不能控制它指向的数据结构是不是可变的。也就是指针指向的地址存储的内容可以是可变的。
可以用object,freeze()方法将对象冻结

4.ES6声明变量的6种方法
（1）var 
（2）function
（3）let
（4）const
（5）class
（6）import
第一、二种声明的全局变量属于顶级对象的属性，第3,4,5种声明的变量不属于顶级对象的属性。??有质疑！